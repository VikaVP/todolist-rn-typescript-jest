abd77f14ca98b231bd62d6bda5cb55d0
"use strict";









var _DeprecatedTextPropTypes = _interopRequireDefault(require("../DeprecatedPropTypes/DeprecatedTextPropTypes"));
var PressabilityDebug = _interopRequireWildcard(require("../Pressability/PressabilityDebug"));
var _usePressability = _interopRequireDefault(require("../Pressability/usePressability"));
var _StyleSheet = _interopRequireDefault(require("../StyleSheet/StyleSheet"));
var _processColor = _interopRequireDefault(require("../StyleSheet/processColor"));
var _TextAncestor = _interopRequireDefault(require("./TextAncestor"));
var _TextNativeComponent = require("./TextNativeComponent");

var React = _interopRequireWildcard(require("react"));

var _invariant = _interopRequireDefault(require("invariant"));var _excluded = ["accessible", "allowFontScaling", "ellipsizeMode", "onLongPress", "onPress", "onPressIn", "onPressOut", "onResponderGrant", "onResponderMove", "onResponderRelease", "onResponderTerminate", "onResponderTerminationRequest", "onStartShouldSetResponder", "pressRetentionOffset", "suppressHighlighting"];var _this = this,_jsxFileName = "/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/node_modules/react-native/Libraries/Text/Text.js";function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}






var Text =


React.forwardRef(function (props, forwardedRef) {
  var
  accessible =















  props.accessible,allowFontScaling = props.allowFontScaling,ellipsizeMode = props.ellipsizeMode,onLongPress = props.onLongPress,onPress = props.onPress,_onPressIn = props.onPressIn,_onPressOut = props.onPressOut,_onResponderGrant = props.onResponderGrant,_onResponderMove = props.onResponderMove,_onResponderRelease = props.onResponderRelease,_onResponderTerminate = props.onResponderTerminate,onResponderTerminationRequest = props.onResponderTerminationRequest,onStartShouldSetResponder = props.onStartShouldSetResponder,pressRetentionOffset = props.pressRetentionOffset,suppressHighlighting = props.suppressHighlighting,restProps = _objectWithoutProperties(props, _excluded);

  var _useState = (0, React.useState)(false),_useState2 = _slicedToArray(_useState, 2),isHighlighted = _useState2[0],setHighlighted = _useState2[1];

  var isPressable =
  (onPress != null ||
  onLongPress != null ||
  onStartShouldSetResponder != null) &&
  restProps.disabled !== true;

  var initialized = useLazyInitialization(isPressable);
  var config = (0, React.useMemo)(
  function () {return (
      initialized ?
      {
        disabled: !isPressable,
        pressRectOffset: pressRetentionOffset,
        onLongPress: onLongPress,
        onPress: onPress,
        onPressIn: function onPressIn(event) {
          setHighlighted(!suppressHighlighting);
          _onPressIn == null ? void 0 : _onPressIn(event);
        },
        onPressOut: function onPressOut(event) {
          setHighlighted(false);
          _onPressOut == null ? void 0 : _onPressOut(event);
        },
        onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,
        onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder } :

      null);},
  [
  initialized,
  isPressable,
  pressRetentionOffset,
  onLongPress,
  onPress,
  _onPressIn,
  _onPressOut,
  onResponderTerminationRequest,
  onStartShouldSetResponder,
  suppressHighlighting]);



  var eventHandlers = (0, _usePressability.default)(config);
  var eventHandlersForText = (0, React.useMemo)(
  function () {return (
      eventHandlers == null ?
      null :
      {
        onResponderGrant: function onResponderGrant(event) {
          eventHandlers.onResponderGrant(event);
          if (_onResponderGrant != null) {
            _onResponderGrant(event);
          }
        },
        onResponderMove: function onResponderMove(event) {
          eventHandlers.onResponderMove(event);
          if (_onResponderMove != null) {
            _onResponderMove(event);
          }
        },
        onResponderRelease: function onResponderRelease(event) {
          eventHandlers.onResponderRelease(event);
          if (_onResponderRelease != null) {
            _onResponderRelease(event);
          }
        },
        onResponderTerminate: function onResponderTerminate(event) {
          eventHandlers.onResponderTerminate(event);
          if (_onResponderTerminate != null) {
            _onResponderTerminate(event);
          }
        },
        onResponderTerminationRequest:
        eventHandlers.onResponderTerminationRequest,
        onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder });},

  [
  eventHandlers,
  _onResponderGrant,
  _onResponderMove,
  _onResponderRelease,
  _onResponderTerminate]);




  var selectionColor =
  restProps.selectionColor == null ?
  null :
  (0, _processColor.default)(restProps.selectionColor);

  var style = restProps.style;
  if (__DEV__) {
    if (PressabilityDebug.isEnabled() && onPress != null) {
      style = _StyleSheet.default.compose(restProps.style, {
        color: 'magenta' });

    }
  }

  var numberOfLines = restProps.numberOfLines;
  if (numberOfLines != null && !(numberOfLines >= 0)) {
    console.error("'numberOfLines' in <Text> must be a non-negative number, received: " +
    numberOfLines + ". The value will be set to 0.");

    numberOfLines = 0;
  }

  var hasTextAncestor = (0, React.useContext)(_TextAncestor.default);

  return hasTextAncestor ?
  React.createElement(_TextNativeComponent.NativeVirtualText, _extends({},
  restProps,
  eventHandlersForText, {
    isHighlighted: isHighlighted,
    numberOfLines: numberOfLines,
    selectionColor: selectionColor,
    style: style,
    ref: forwardedRef, __self: _this, __source: { fileName: _jsxFileName, lineNumber: 163, columnNumber: 5 } })) :


  React.createElement(_TextAncestor.default.Provider, { value: true, __self: _this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 5 } },
  React.createElement(_TextNativeComponent.NativeText, _extends({},
  restProps,
  eventHandlersForText, {
    accessible: accessible !== false,
    allowFontScaling: allowFontScaling !== false,
    ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',
    isHighlighted: isHighlighted,
    numberOfLines: numberOfLines,
    selectionColor: selectionColor,
    style: style,
    ref: forwardedRef, __self: _this, __source: { fileName: _jsxFileName, lineNumber: 174, columnNumber: 7 } })));



});

Text.displayName = 'Text';


Text.propTypes = _DeprecatedTextPropTypes.default;






function useLazyInitialization(newValue) {
  var _useState3 = (0, React.useState)(newValue),_useState4 = _slicedToArray(_useState3, 2),oldValue = _useState4[0],setValue = _useState4[1];
  if (!oldValue && newValue) {
    setValue(newValue);
  }
  return oldValue;
}


module.exports = Text;