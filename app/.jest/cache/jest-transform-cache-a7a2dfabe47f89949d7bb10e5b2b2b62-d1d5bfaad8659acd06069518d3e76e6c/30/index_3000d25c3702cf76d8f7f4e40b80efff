6680a138b037da2ab3526524cec45745
/* istanbul ignore next */
function cov_1i8t5bd07q() {
  var path = "/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/components/MainInput/index.tsx";
  var hash = "20b4fae2b16c0eda0c5b2e6c091f2c286e2c74b7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/components/MainInput/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "3": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 53
        }
      },
      "4": {
        start: {
          line: 10,
          column: 13
        },
        end: {
          line: 10,
          column: 66
        }
      },
      "5": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 24
        }
      },
      "7": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "8": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "9": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 23,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "MainInput",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      file: undefined,
      mappings: ";;;;;;;AAAA;;AAGA;;AACA;;AAOM,SAAUA,SAAV,OAAgE;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AACpE,SACE,6BAAC,sBAAD;AACE,SAAK,EAAEF,KADT;AAEE,YAAQ,EAAEC,QAFZ;AAGE,eAAW,EAAEC,WAHf;AAIE,wBAAoB,EAAEC,eAAMC,MAAN,CAAaC;AAJrC,IADF;AAQD",
      names: ["MainInput", "value", "onChange", "placeholder", "theme", "colors", "text"],
      sourceRoot: undefined,
      sources: ["/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/components/MainInput/index.tsx"],
      sourcesContent: ["import React from \"react\";\nimport { TextInputProps } from \"react-native\";\n\nimport theme from \"../../global/theme\";\nimport { InputContainer } from \"./styles\";\n\ninterface IMainInput extends TextInputProps {\n  value: string;\n  placeholder: string;\n}\n\nexport function MainInput({ value, onChange, placeholder }: IMainInput) {\n  return (\n    <InputContainer\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      placeholderTextColor={theme.colors.text}\n    />\n  );\n}\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "20b4fae2b16c0eda0c5b2e6c091f2c286e2c74b7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i8t5bd07q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1i8t5bd07q();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1i8t5bd07q().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1i8t5bd07q().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1i8t5bd07q().s[2]++;
exports.MainInput = MainInput;

var _react =
/* istanbul ignore next */
(cov_1i8t5bd07q().s[3]++, _interopRequireDefault(require("react")));

var _theme =
/* istanbul ignore next */
(cov_1i8t5bd07q().s[4]++, _interopRequireDefault(require("../../global/theme")));

var _styles =
/* istanbul ignore next */
(cov_1i8t5bd07q().s[5]++, require("./styles"));

function MainInput(_ref) {
  /* istanbul ignore next */
  cov_1i8t5bd07q().f[0]++;
  var value =
  /* istanbul ignore next */
  (cov_1i8t5bd07q().s[6]++, _ref.value),
      onChange =
  /* istanbul ignore next */
  (cov_1i8t5bd07q().s[7]++, _ref.onChange),
      placeholder =
  /* istanbul ignore next */
  (cov_1i8t5bd07q().s[8]++, _ref.placeholder);

  /* istanbul ignore next */
  cov_1i8t5bd07q().s[9]++;
  return _react.default.createElement(_styles.InputContainer, {
    value: value,
    onChange: onChange,
    placeholder: placeholder,
    placeholderTextColor: _theme.default.colors.text
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXbUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFYbkM7QUFBQTtBQUFBOztBQUdBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBT00sU0FBVUMsU0FBVixPQUFnRTtBQUFBO0FBQUE7QUFBQSxNQUExQ0MsS0FBMEM7QUFBQTtBQUFBLGlDQUExQ0EsS0FBMEM7QUFBQSxNQUFuQ0YsUUFBbUM7QUFBQTtBQUFBLGlDQUFuQ0EsUUFBbUM7QUFBQSxNQUF6QkcsV0FBeUI7QUFBQTtBQUFBLGlDQUF6QkEsV0FBeUI7O0FBQUE7QUFBQTtBQUNwRSxTQUNFQyw2QkFBQ0Msc0JBQUQ7QUFDRUgsU0FBSyxFQUFFQSxLQURUO0FBRUVGLFlBQVEsRUFBRUEsUUFGWjtBQUdFRyxlQUFXLEVBQUVBLFdBSGY7QUFJRUcsd0JBQW9CLEVBQUVDLGVBQU1DLE1BQU5ELENBQWFFO0FBSnJDLElBREY7QUFRRCIsIm5hbWVzIjpbIm9uQ2hhbmdlIiwiTWFpbklucHV0IiwidmFsdWUiLCJwbGFjZWhvbGRlciIsIl9yZWFjdCIsIl9zdHlsZXMiLCJwbGFjZWhvbGRlclRleHRDb2xvciIsInRoZW1lIiwiY29sb3JzIiwidGV4dCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYm8tdmlrYS9Eb2N1bWVudHMvUmVhY3QtTmF0aXZlLVRvLWRvLUxpc3QtbWFpbi9hcHAvc3JjL2NvbXBvbmVudHMvTWFpbklucHV0L2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBUZXh0SW5wdXRQcm9wcyB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcblxuaW1wb3J0IHRoZW1lIGZyb20gXCIuLi8uLi9nbG9iYWwvdGhlbWVcIjtcbmltcG9ydCB7IElucHV0Q29udGFpbmVyIH0gZnJvbSBcIi4vc3R5bGVzXCI7XG5cbmludGVyZmFjZSBJTWFpbklucHV0IGV4dGVuZHMgVGV4dElucHV0UHJvcHMge1xuICB2YWx1ZTogc3RyaW5nO1xuICBwbGFjZWhvbGRlcjogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTWFpbklucHV0KHsgdmFsdWUsIG9uQ2hhbmdlLCBwbGFjZWhvbGRlciB9OiBJTWFpbklucHV0KSB7XG4gIHJldHVybiAoXG4gICAgPElucHV0Q29udGFpbmVyXG4gICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICBwbGFjZWhvbGRlclRleHRDb2xvcj17dGhlbWUuY29sb3JzLnRleHR9XG4gICAgLz5cbiAgKTtcbn1cbiJdfQ==