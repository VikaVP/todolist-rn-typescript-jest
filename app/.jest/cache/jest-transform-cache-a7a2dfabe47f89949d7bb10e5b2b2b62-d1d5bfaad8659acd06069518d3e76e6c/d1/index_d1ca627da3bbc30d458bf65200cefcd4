be3221565ddee9a718fa1e3af9bcaf23
/* istanbul ignore next */
function cov_1ph5zvya7i() {
  var path = "/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/screens/Home/index.tsx";
  var hash = "2641901b4d9839a3adeb7ef63e1d30ac37b345b4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/screens/Home/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "3": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 80
        }
      },
      "4": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "5": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 101
        }
      },
      "6": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 93
        }
      },
      "7": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "8": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 42
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 96
        }
      },
      "10": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "11": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "13": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 108
        }
      },
      "14": {
        start: {
          line: 30,
          column: 13
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "15": {
        start: {
          line: 32,
          column: 14
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "16": {
        start: {
          line: 34,
          column: 49
        },
        end: {
          line: 34,
          column: 96
        }
      },
      "17": {
        start: {
          line: 34,
          column: 84
        },
        end: {
          line: 34,
          column: 96
        }
      },
      "18": {
        start: {
          line: 34,
          column: 121
        },
        end: {
          line: 34,
          column: 134
        }
      },
      "19": {
        start: {
          line: 34,
          column: 159
        },
        end: {
          line: 34,
          column: 172
        }
      },
      "20": {
        start: {
          line: 34,
          column: 174
        },
        end: {
          line: 34,
          column: 333
        }
      },
      "21": {
        start: {
          line: 34,
          column: 258
        },
        end: {
          line: 34,
          column: 316
        }
      },
      "22": {
        start: {
          line: 36,
          column: 53
        },
        end: {
          line: 36,
          column: 111
        }
      },
      "23": {
        start: {
          line: 36,
          column: 98
        },
        end: {
          line: 36,
          column: 109
        }
      },
      "24": {
        start: {
          line: 36,
          column: 112
        },
        end: {
          line: 36,
          column: 214
        }
      },
      "25": {
        start: {
          line: 36,
          column: 188
        },
        end: {
          line: 36,
          column: 212
        }
      },
      "26": {
        start: {
          line: 36,
          column: 227
        },
        end: {
          line: 36,
          column: 264
        }
      },
      "27": {
        start: {
          line: 36,
          column: 266
        },
        end: {
          line: 36,
          column: 321
        }
      },
      "28": {
        start: {
          line: 36,
          column: 297
        },
        end: {
          line: 36,
          column: 319
        }
      },
      "29": {
        start: {
          line: 36,
          column: 335
        },
        end: {
          line: 36,
          column: 337
        }
      },
      "30": {
        start: {
          line: 36,
          column: 367
        },
        end: {
          line: 36,
          column: 423
        }
      },
      "31": {
        start: {
          line: 36,
          column: 425
        },
        end: {
          line: 36,
          column: 726
        }
      },
      "32": {
        start: {
          line: 36,
          column: 448
        },
        end: {
          line: 36,
          column: 724
        }
      },
      "33": {
        start: {
          line: 36,
          column: 534
        },
        end: {
          line: 36,
          column: 606
        }
      },
      "34": {
        start: {
          line: 36,
          column: 608
        },
        end: {
          line: 36,
          column: 722
        }
      },
      "35": {
        start: {
          line: 36,
          column: 646
        },
        end: {
          line: 36,
          column: 687
        }
      },
      "36": {
        start: {
          line: 36,
          column: 697
        },
        end: {
          line: 36,
          column: 720
        }
      },
      "37": {
        start: {
          line: 36,
          column: 727
        },
        end: {
          line: 36,
          column: 748
        }
      },
      "38": {
        start: {
          line: 36,
          column: 749
        },
        end: {
          line: 36,
          column: 787
        }
      },
      "39": {
        start: {
          line: 36,
          column: 762
        },
        end: {
          line: 36,
          column: 785
        }
      },
      "40": {
        start: {
          line: 36,
          column: 788
        },
        end: {
          line: 36,
          column: 802
        }
      },
      "41": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "42": {
        start: {
          line: 41,
          column: 18
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "43": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "44": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "45": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "46": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 46
        }
      },
      "47": {
        start: {
          line: 47,
          column: 19
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "48": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "49": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "50": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "51": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "52": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "53": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 33
        }
      },
      "54": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "55": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "56": {
        start: {
          line: 58,
          column: 13
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "57": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "58": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "59": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 63
        }
      },
      "60": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "61": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 38
        }
      },
      "62": {
        start: {
          line: 66,
          column: 30
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "63": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "64": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 12
        }
      },
      "65": {
        start: {
          line: 70,
          column: 10
        },
        end: {
          line: 70,
          column: 41
        }
      },
      "66": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "67": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 12
        }
      },
      "68": {
        start: {
          line: 76,
          column: 10
        },
        end: {
          line: 76,
          column: 42
        }
      },
      "69": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "70": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "71": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "72": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "73": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 70
        }
      },
      "74": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "75": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "76": {
        start: {
          line: 100,
          column: 13
        },
        end: {
          line: 100,
          column: 20
        }
      },
      "77": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 109,
          column: 8
        }
      },
      "78": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "79": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "80": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "81": {
        start: {
          line: 113,
          column: 13
        },
        end: {
          line: 113,
          column: 21
        }
      },
      "82": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 8
        }
      },
      "83": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "84": {
        start: {
          line: 119,
          column: 19
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "85": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 152,
          column: 38
        }
      },
      "86": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "87": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "88": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "89": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "90": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 85
        }
      },
      "91": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 38
        }
      },
      "92": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "93": {
        start: {
          line: 133,
          column: 14
        },
        end: {
          line: 133,
          column: 78
        }
      },
      "94": {
        start: {
          line: 135,
          column: 14
        },
        end: {
          line: 135,
          column: 59
        }
      },
      "95": {
        start: {
          line: 136,
          column: 14
        },
        end: {
          line: 136,
          column: 35
        }
      },
      "96": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "97": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 18
        }
      },
      "98": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 30
        }
      },
      "99": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 47
        }
      },
      "100": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "101": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 35
        }
      },
      "102": {
        start: {
          line: 155,
          column: 2
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "103": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "104": {
        start: {
          line: 158,
          column: 2
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "105": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "106": {
        start: {
          line: 161,
          column: 2
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "107": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 68
        }
      },
      "108": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 202,
          column: 77
        }
      },
      "109": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "110": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 67
        }
      },
      "111": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 179,
          column: 49
        }
      },
      "112": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "113": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "114": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 34
        }
      },
      "115": {
        start: {
          line: 205,
          column: 15
        },
        end: {
          line: 205,
          column: 19
        }
      },
      "116": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 206,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 335
          }
        },
        line: 34
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 34,
            column: 218
          },
          end: {
            line: 34,
            column: 242
          }
        },
        loc: {
          start: {
            line: 34,
            column: 256
          },
          end: {
            line: 34,
            column: 318
          }
        },
        line: 34
      },
      "2": {
        name: "_interopRequireWildcard",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 32
          }
        },
        loc: {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 804
          }
        },
        line: 36
      },
      "3": {
        name: "Home",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 13
          }
        },
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 38
      },
      "4": {
        name: "handleSegmentedChange",
        decl: {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 60
          }
        },
        loc: {
          start: {
            line: 66,
            column: 63
          },
          end: {
            line: 84,
            column: 3
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 69,
            column: 41
          }
        },
        loc: {
          start: {
            line: 69,
            column: 56
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 40
          },
          end: {
            line: 75,
            column: 41
          }
        },
        loc: {
          start: {
            line: 75,
            column: 56
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 75
      },
      "7": {
        name: "handleAdd",
        decl: {
          start: {
            line: 86,
            column: 11
          },
          end: {
            line: 86,
            column: 20
          }
        },
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 97,
            column: 3
          }
        },
        line: 86
      },
      "8": {
        name: "handleComplete",
        decl: {
          start: {
            line: 99,
            column: 11
          },
          end: {
            line: 99,
            column: 25
          }
        },
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 99
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 29
          },
          end: {
            line: 101,
            column: 30
          }
        },
        loc: {
          start: {
            line: 101,
            column: 45
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 101
      },
      "10": {
        name: "handleDelete",
        decl: {
          start: {
            line: 112,
            column: 11
          },
          end: {
            line: 112,
            column: 23
          }
        },
        loc: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 117,
            column: 3
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 33
          }
        },
        loc: {
          start: {
            line: 114,
            column: 48
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 114
      },
      "12": {
        name: "_callee",
        decl: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 35
          }
        },
        loc: {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 119
      },
      "13": {
        name: "_callee$",
        decl: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 121,
            column: 55
          }
        },
        loc: {
          start: {
            line: 121,
            column: 66
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 24
          },
          end: {
            line: 155,
            column: 25
          }
        },
        loc: {
          start: {
            line: 155,
            column: 36
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 158,
            column: 25
          }
        },
        loc: {
          start: {
            line: 158,
            column: 36
          },
          end: {
            line: 160,
            column: 3
          }
        },
        line: 158
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 25
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 163,
            column: 3
          }
        },
        line: 161
      },
      "17": {
        name: "onChange",
        decl: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 31
          }
        },
        loc: {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      },
      "18": {
        name: "onChange",
        decl: {
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 31
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 175
      },
      "19": {
        name: "onValueChange",
        decl: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 41
          }
        },
        loc: {
          start: {
            line: 178,
            column: 45
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 178
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 190,
            column: 104
          },
          end: {
            line: 190,
            column: 105
          }
        },
        loc: {
          start: {
            line: 190,
            column: 120
          },
          end: {
            line: 202,
            column: 3
          }
        },
        line: 190
      },
      "21": {
        name: "onComplete",
        decl: {
          start: {
            line: 195,
            column: 27
          },
          end: {
            line: 195,
            column: 37
          }
        },
        loc: {
          start: {
            line: 195,
            column: 40
          },
          end: {
            line: 197,
            column: 7
          }
        },
        line: 195
      },
      "22": {
        name: "onDelete",
        decl: {
          start: {
            line: 198,
            column: 25
          },
          end: {
            line: 198,
            column: 33
          }
        },
        loc: {
          start: {
            line: 198,
            column: 36
          },
          end: {
            line: 200,
            column: 7
          }
        },
        line: 198
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 34,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 34,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 265
          },
          end: {
            line: 34,
            column: 315
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 279
          },
          end: {
            line: 34,
            column: 295
          }
        }, {
          start: {
            line: 34,
            column: 298
          },
          end: {
            line: 34,
            column: 315
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 36,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 36,
            column: 111
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 69
          }
        }, {
          start: {
            line: 36,
            column: 73
          },
          end: {
            line: 36,
            column: 76
          }
        }, {
          start: {
            line: 36,
            column: 80
          },
          end: {
            line: 36,
            column: 94
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 112
          },
          end: {
            line: 36,
            column: 214
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 112
          },
          end: {
            line: 36,
            column: 214
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 116
          },
          end: {
            line: 36,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 116
          },
          end: {
            line: 36,
            column: 128
          }
        }, {
          start: {
            line: 36,
            column: 132
          },
          end: {
            line: 36,
            column: 155
          }
        }, {
          start: {
            line: 36,
            column: 159
          },
          end: {
            line: 36,
            column: 184
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 266
          },
          end: {
            line: 36,
            column: 321
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 266
          },
          end: {
            line: 36,
            column: 321
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 270
          },
          end: {
            line: 36,
            column: 293
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 270
          },
          end: {
            line: 36,
            column: 275
          }
        }, {
          start: {
            line: 36,
            column: 279
          },
          end: {
            line: 36,
            column: 293
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 367
          },
          end: {
            line: 36,
            column: 423
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 367
          },
          end: {
            line: 36,
            column: 388
          }
        }, {
          start: {
            line: 36,
            column: 392
          },
          end: {
            line: 36,
            column: 423
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 448
          },
          end: {
            line: 36,
            column: 724
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 448
          },
          end: {
            line: 36,
            column: 724
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 36,
            column: 452
          },
          end: {
            line: 36,
            column: 519
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 452
          },
          end: {
            line: 36,
            column: 469
          }
        }, {
          start: {
            line: 36,
            column: 473
          },
          end: {
            line: 36,
            column: 519
          }
        }],
        line: 36
      },
      "11": {
        loc: {
          start: {
            line: 36,
            column: 534
          },
          end: {
            line: 36,
            column: 606
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 558
          },
          end: {
            line: 36,
            column: 599
          }
        }, {
          start: {
            line: 36,
            column: 602
          },
          end: {
            line: 36,
            column: 606
          }
        }],
        line: 36
      },
      "12": {
        loc: {
          start: {
            line: 36,
            column: 608
          },
          end: {
            line: 36,
            column: 722
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 608
          },
          end: {
            line: 36,
            column: 722
          }
        }, {
          start: {
            line: 36,
            column: 695
          },
          end: {
            line: 36,
            column: 722
          }
        }],
        line: 36
      },
      "13": {
        loc: {
          start: {
            line: 36,
            column: 612
          },
          end: {
            line: 36,
            column: 642
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 612
          },
          end: {
            line: 36,
            column: 616
          }
        }, {
          start: {
            line: 36,
            column: 621
          },
          end: {
            line: 36,
            column: 629
          }
        }, {
          start: {
            line: 36,
            column: 633
          },
          end: {
            line: 36,
            column: 641
          }
        }],
        line: 36
      },
      "14": {
        loc: {
          start: {
            line: 36,
            column: 749
          },
          end: {
            line: 36,
            column: 787
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 749
          },
          end: {
            line: 36,
            column: 787
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "15": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 72,
            column: 14
          }
        }, {
          start: {
            line: 74,
            column: 6
          },
          end: {
            line: 78,
            column: 14
          }
        }, {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 14
          }
        }],
        line: 67
      },
      "16": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: 89,
            column: 11
          },
          end: {
            line: 96,
            column: 5
          }
        }],
        line: 87
      },
      "17": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "18": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 124,
            column: 10
          },
          end: {
            line: 127,
            column: 85
          }
        }, {
          start: {
            line: 129,
            column: 10
          },
          end: {
            line: 140,
            column: 18
          }
        }, {
          start: {
            line: 142,
            column: 10
          },
          end: {
            line: 145,
            column: 37
          }
        }, {
          start: {
            line: 147,
            column: 10
          },
          end: {
            line: 147,
            column: 18
          }
        }, {
          start: {
            line: 148,
            column: 10
          },
          end: {
            line: 149,
            column: 35
          }
        }],
        line: 123
      },
      "19": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 137,
            column: 13
          }
        }],
        line: 132
      },
      "20": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 33
          }
        }, {
          start: {
            line: 135,
            column: 37
          },
          end: {
            line: 135,
            column: 58
          }
        }],
        line: 135
      },
      "21": {
        loc: {
          start: {
            line: 190,
            column: 59
          },
          end: {
            line: 202,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 87
          },
          end: {
            line: 202,
            column: 4
          }
        }, {
          start: {
            line: 202,
            column: 7
          },
          end: {
            line: 202,
            column: 74
          }
        }],
        line: 190
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      file: undefined,
      mappings: "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",
      names: ["Home", "segmentValues", "segmentedIndex", "setSegmentedIndex", "segmentedStatus", "setSegmentedStatus", "mainList", "setMainList", "text", "setText", "filteredList", "setFilteredList", "handleSegmentedChange", "filter", "item", "completed", "handleAdd", "Alert", "alert", "id", "Math", "random", "handleComplete", "map", "handleDelete", "getStorage", "AsyncStorage", "getItem", "jsonValue", "setItem", "JSON", "stringify", "storage", "parse", "console", "log", "e", "nativeEvent", "selectedSegmentIndex", "toLowerCase", "fontFamily", "theme", "fonts", "regular", "fontWeight", "bold", "colors", "primary", "dark", "length"],
      sourceRoot: undefined,
      sources: ["/Users/dbo-vika/Documents/React-Native-To-do-List-main/app/src/screens/Home/index.tsx"],
      sourcesContent: ["import React, { useState, useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { MainInput } from \"../../components/MainInput\";\nimport { AddButton } from \"../../components/AddButton\";\nimport { MainCard } from \"../../components/MainCard\";\n\nimport SegmentedControl from \"@react-native-segmented-control/segmented-control\";\n\nimport theme from \"../../global/theme\";\n\nimport { Container, Title, FormContainer, CardList, EmptyText } from \"./styles\";\n\ninterface IList {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\ninterface IId {\n  id: number;\n}\n\nfunction Home() {\n  const segmentValues = [\"All\", \"Complete\", \"Incomplete\"];\n\n  const [segmentedIndex, setSegmentedIndex] = useState(0);\n  const [segmentedStatus, setSegmentedStatus] = useState(\"all\");\n  const [mainList, setMainList] = useState<IList[]>([]);\n  const [text, setText] = useState(\"\");\n  const [filteredList, setFilteredList] = useState<IList[]>([]);\n\n  const handleSegmentedChange = () => {\n    switch (segmentedStatus) {\n      case \"complete\":\n        setFilteredList(mainList.filter((item) => item.completed === true));\n\n        break;\n      case \"incomplete\":\n        setFilteredList(mainList.filter((item) => item.completed === false));\n\n        break;\n      default:\n        setFilteredList(mainList);\n\n        break;\n    }\n  };\n\n  function handleAdd() {\n    if (text === \"\") {\n      Alert.alert(\"Insert a text before before adding.\");\n    } else {\n      setMainList([\n        ...mainList,\n        { id: Math.random() * 1000, text: text, completed: false },\n      ]);\n\n      setText(\"\");\n    }\n  }\n\n  function handleComplete({ id }: IId) {\n    setMainList(\n      mainList.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  }\n\n  function handleDelete({ id }: IId) {\n    setMainList(mainList.filter((item) => item.id !== id));\n  }\n\n  const getStorage = async () => {\n    try {\n      let jsonValue = await AsyncStorage.getItem(\"list\");\n\n      if (!jsonValue) {\n        AsyncStorage.setItem(\"list\", JSON.stringify(mainList));\n      } else {\n        let storage = jsonValue && JSON.parse(jsonValue);\n\n        setMainList(storage);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getStorage();\n  }, []);\n\n  useEffect(() => {\n    handleSegmentedChange();\n  }, [segmentedStatus, mainList]);\n\n  useEffect(() => {\n    AsyncStorage.setItem(\"list\", JSON.stringify(mainList));\n  }, [mainList]);\n\n  return (\n    <Container>\n      <Title>To do List</Title>\n\n      <FormContainer>\n        <MainInput\n          placeholder=\"Type here...\"\n          value={text}\n          onChange={(e) => setText(e.nativeEvent.text)}\n        />\n\n        <AddButton onPress={handleAdd} />\n      </FormContainer>\n\n      <SegmentedControl\n        values={segmentValues}\n        selectedIndex={segmentedIndex}\n        onChange={(e) => setSegmentedIndex(e.nativeEvent.selectedSegmentIndex)}\n        onValueChange={(e) => setSegmentedStatus(e.toLowerCase())}\n        fontStyle={{ fontFamily: theme.fonts.regular }}\n        activeFontStyle={{\n          fontWeight: \"normal\",\n          fontFamily: theme.fonts.bold,\n        }}\n        tintColor={theme.colors.primary}\n        backgroundColor={theme.colors.dark}\n      />\n\n      <CardList>\n        {filteredList.length !== 0 ? (\n          filteredList.map((item) => (\n            <MainCard\n              key={item.id}\n              completed={item.completed}\n              text={item.text}\n              onComplete={() => handleComplete(item)}\n              onDelete={() => handleDelete(item)}\n            />\n          ))\n        ) : (\n          <EmptyText>-NO TASKS-</EmptyText>\n        )}\n      </CardList>\n    </Container>\n  );\n}\n\nexport default Home;\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2641901b4d9839a3adeb7ef63e1d30ac37b345b4"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ph5zvya7i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1ph5zvya7i();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1ph5zvya7i().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ph5zvya7i().s[2]++;
exports.default = void 0;

var _regenerator =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[3]++, _interopRequireDefault(require("@babel/runtime/regenerator")));

var _extends2 =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

var _slicedToArray2 =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[6]++, _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")));

var _react =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[7]++, _interopRequireWildcard(require("react")));

var _reactNative =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[8]++, require("react-native"));

var _asyncStorage =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[9]++, _interopRequireDefault(require("@react-native-async-storage/async-storage")));

var _MainInput =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[10]++, require("../../components/MainInput"));

var _AddButton =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[11]++, require("../../components/AddButton"));

var _MainCard =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[12]++, require("../../components/MainCard"));

var _segmentedControl =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[13]++, _interopRequireDefault(require("@react-native-segmented-control/segmented-control")));

var _theme =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[14]++, _interopRequireDefault(require("../../global/theme")));

var _styles =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[15]++, require("./styles"));

function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1ph5zvya7i().f[0]++;
  cov_1ph5zvya7i().s[16]++;

  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1ph5zvya7i().b[0][0]++;
    cov_1ph5zvya7i().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1ph5zvya7i().b[0][1]++;
  }

  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[19]++, new WeakMap());

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[20]++;
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[1]++;
    cov_1ph5zvya7i().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1ph5zvya7i().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1ph5zvya7i().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1ph5zvya7i().f[2]++;
  cov_1ph5zvya7i().s[22]++;

  if (
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().b[2][0]++;
    cov_1ph5zvya7i().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1ph5zvya7i().b[2][1]++;
  }

  cov_1ph5zvya7i().s[24]++;

  if (
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().b[4][0]++;
    cov_1ph5zvya7i().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ph5zvya7i().b[4][1]++;
  }

  var cache =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[26]++, _getRequireWildcardCache(nodeInterop));

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[27]++;

  if (
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().b[6][0]++;
    cov_1ph5zvya7i().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1ph5zvya7i().b[6][1]++;
  }

  var newObj =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[29]++, {});
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[30]++,
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[8][1]++, Object.getOwnPropertyDescriptor));

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[31]++;

  for (var key in obj) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().s[32]++;

    if (
    /* istanbul ignore next */
    (cov_1ph5zvya7i().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1ph5zvya7i().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1ph5zvya7i().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1ph5zvya7i().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1ph5zvya7i().b[11][1]++, null));

      /* istanbul ignore next */
      cov_1ph5zvya7i().s[34]++;

      if (
      /* istanbul ignore next */
      (cov_1ph5zvya7i().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1ph5zvya7i().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1ph5zvya7i().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[12][0]++;
        cov_1ph5zvya7i().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[12][1]++;
        cov_1ph5zvya7i().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ph5zvya7i().b[9][1]++;
    }
  }

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[37]++;
  newObj.default = obj;

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[38]++;

  if (cache) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().b[14][0]++;
    cov_1ph5zvya7i().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1ph5zvya7i().b[14][1]++;
  }

  cov_1ph5zvya7i().s[40]++;
  return newObj;
}

function Home() {
  /* istanbul ignore next */
  cov_1ph5zvya7i().f[3]++;
  var segmentValues =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[41]++, ["All", "Complete", "Incomplete"]);

  var _useState =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[42]++, (0, _react.useState)(0)),
      _useState2 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[43]++, (0, _slicedToArray2.default)(_useState, 2)),
      segmentedIndex =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[44]++, _useState2[0]),
      setSegmentedIndex =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[45]++, _useState2[1]);

  var _useState3 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[46]++, (0, _react.useState)("all")),
      _useState4 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[47]++, (0, _slicedToArray2.default)(_useState3, 2)),
      segmentedStatus =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[48]++, _useState4[0]),
      setSegmentedStatus =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[49]++, _useState4[1]);

  var _useState5 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[50]++, (0, _react.useState)([])),
      _useState6 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[51]++, (0, _slicedToArray2.default)(_useState5, 2)),
      mainList =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[52]++, _useState6[0]),
      setMainList =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[53]++, _useState6[1]);

  var _useState7 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[54]++, (0, _react.useState)("")),
      _useState8 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[55]++, (0, _slicedToArray2.default)(_useState7, 2)),
      text =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[56]++, _useState8[0]),
      setText =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[57]++, _useState8[1]);

  var _useState9 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[58]++, (0, _react.useState)([])),
      _useState10 =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[59]++, (0, _slicedToArray2.default)(_useState9, 2)),
      filteredList =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[60]++, _useState10[0]),
      setFilteredList =
  /* istanbul ignore next */
  (cov_1ph5zvya7i().s[61]++, _useState10[1]);

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[62]++;

  var handleSegmentedChange = function handleSegmentedChange() {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[4]++;
    cov_1ph5zvya7i().s[63]++;

    switch (segmentedStatus) {
      case "complete":
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[15][0]++;
        cov_1ph5zvya7i().s[64]++;
        setFilteredList(mainList.filter(function (item) {
          /* istanbul ignore next */
          cov_1ph5zvya7i().f[5]++;
          cov_1ph5zvya7i().s[65]++;
          return item.completed === true;
        }));

        /* istanbul ignore next */
        cov_1ph5zvya7i().s[66]++;
        break;

      case "incomplete":
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[15][1]++;
        cov_1ph5zvya7i().s[67]++;
        setFilteredList(mainList.filter(function (item) {
          /* istanbul ignore next */
          cov_1ph5zvya7i().f[6]++;
          cov_1ph5zvya7i().s[68]++;
          return item.completed === false;
        }));

        /* istanbul ignore next */
        cov_1ph5zvya7i().s[69]++;
        break;

      default:
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[15][2]++;
        cov_1ph5zvya7i().s[70]++;
        setFilteredList(mainList);

        /* istanbul ignore next */
        cov_1ph5zvya7i().s[71]++;
        break;
    }
  };

  function handleAdd() {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[7]++;
    cov_1ph5zvya7i().s[72]++;

    if (text === "") {
      /* istanbul ignore next */
      cov_1ph5zvya7i().b[16][0]++;
      cov_1ph5zvya7i().s[73]++;

      _reactNative.Alert.alert("Insert a text before before adding.");
    } else {
      /* istanbul ignore next */
      cov_1ph5zvya7i().b[16][1]++;
      cov_1ph5zvya7i().s[74]++;
      setMainList([].concat((0, _toConsumableArray2.default)(mainList), [{
        id: Math.random() * 1000,
        text: text,
        completed: false
      }]));

      /* istanbul ignore next */
      cov_1ph5zvya7i().s[75]++;
      setText("");
    }
  }

  function handleComplete(_ref) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[8]++;
    var id =
    /* istanbul ignore next */
    (cov_1ph5zvya7i().s[76]++, _ref.id);

    /* istanbul ignore next */
    cov_1ph5zvya7i().s[77]++;
    setMainList(mainList.map(function (item) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[9]++;
      cov_1ph5zvya7i().s[78]++;

      if (item.id === id) {
        /* istanbul ignore next */
        cov_1ph5zvya7i().b[17][0]++;
        cov_1ph5zvya7i().s[79]++;
        return (0, _extends2.default)({}, item, {
          completed: !item.completed
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ph5zvya7i().b[17][1]++;
      }

      cov_1ph5zvya7i().s[80]++;
      return item;
    }));
  }

  function handleDelete(_ref2) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[10]++;
    var id =
    /* istanbul ignore next */
    (cov_1ph5zvya7i().s[81]++, _ref2.id);

    /* istanbul ignore next */
    cov_1ph5zvya7i().s[82]++;
    setMainList(mainList.filter(function (item) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[11]++;
      cov_1ph5zvya7i().s[83]++;
      return item.id !== id;
    }));
  }

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[84]++;

  var getStorage = function _callee() {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[12]++;
    var jsonValue, storage;

    /* istanbul ignore next */
    cov_1ph5zvya7i().s[85]++;
    return _regenerator.default.async(function _callee$(_context) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[13]++;
      cov_1ph5zvya7i().s[86]++;

      while (1) {
        /* istanbul ignore next */
        cov_1ph5zvya7i().s[87]++;

        switch (_context.prev = _context.next) {
          case 0:
            /* istanbul ignore next */
            cov_1ph5zvya7i().b[18][0]++;
            cov_1ph5zvya7i().s[88]++;
            _context.prev = 0;

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[89]++;
            _context.next = 3;

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[90]++;
            return _regenerator.default.awrap(_asyncStorage.default.getItem("list"));

          case 3:
            /* istanbul ignore next */
            cov_1ph5zvya7i().b[18][1]++;
            cov_1ph5zvya7i().s[91]++;
            jsonValue = _context.sent;

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[92]++;

            if (!jsonValue) {
              /* istanbul ignore next */
              cov_1ph5zvya7i().b[19][0]++;
              cov_1ph5zvya7i().s[93]++;

              _asyncStorage.default.setItem("list", JSON.stringify(mainList));
            } else {
              /* istanbul ignore next */
              cov_1ph5zvya7i().b[19][1]++;
              cov_1ph5zvya7i().s[94]++;
              storage =
              /* istanbul ignore next */
              (cov_1ph5zvya7i().b[20][0]++, jsonValue) &&
              /* istanbul ignore next */
              (cov_1ph5zvya7i().b[20][1]++, JSON.parse(jsonValue));

              /* istanbul ignore next */
              cov_1ph5zvya7i().s[95]++;
              setMainList(storage);
            }

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[96]++;
            _context.next = 10;

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[97]++;
            break;

          case 7:
            /* istanbul ignore next */
            cov_1ph5zvya7i().b[18][2]++;
            cov_1ph5zvya7i().s[98]++;
            _context.prev = 7;

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[99]++;
            _context.t0 = _context["catch"](0);

            /* istanbul ignore next */
            cov_1ph5zvya7i().s[100]++;
            console.log(_context.t0);

          case 10:
            /* istanbul ignore next */
            cov_1ph5zvya7i().b[18][3]++;

          case "end":
            /* istanbul ignore next */
            cov_1ph5zvya7i().b[18][4]++;
            cov_1ph5zvya7i().s[101]++;
            return _context.stop();
        }
      }
    }, null, null, [[0, 7]], Promise);
  };

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[102]++;
  (0, _react.useEffect)(function () {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[14]++;
    cov_1ph5zvya7i().s[103]++;
    getStorage();
  }, []);

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[104]++;
  (0, _react.useEffect)(function () {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[15]++;
    cov_1ph5zvya7i().s[105]++;
    handleSegmentedChange();
  }, [segmentedStatus, mainList]);

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[106]++;
  (0, _react.useEffect)(function () {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[16]++;
    cov_1ph5zvya7i().s[107]++;

    _asyncStorage.default.setItem("list", JSON.stringify(mainList));
  }, [mainList]);

  /* istanbul ignore next */
  cov_1ph5zvya7i().s[108]++;
  return _react.default.createElement(_styles.Container, null, _react.default.createElement(_styles.Title, null, "To do List"), _react.default.createElement(_styles.FormContainer, null, _react.default.createElement(_MainInput.MainInput, {
    placeholder: "Type here...",
    value: text,
    onChange: function onChange(e) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[17]++;
      cov_1ph5zvya7i().s[109]++;
      return setText(e.nativeEvent.text);
    }
  }), _react.default.createElement(_AddButton.AddButton, {
    onPress: handleAdd
  })), _react.default.createElement(_segmentedControl.default, {
    values: segmentValues,
    selectedIndex: segmentedIndex,
    onChange: function onChange(e) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[18]++;
      cov_1ph5zvya7i().s[110]++;
      return setSegmentedIndex(e.nativeEvent.selectedSegmentIndex);
    },
    onValueChange: function onValueChange(e) {
      /* istanbul ignore next */
      cov_1ph5zvya7i().f[19]++;
      cov_1ph5zvya7i().s[111]++;
      return setSegmentedStatus(e.toLowerCase());
    },
    fontStyle: {
      fontFamily: _theme.default.fonts.regular
    },
    activeFontStyle: {
      fontWeight: "normal",
      fontFamily: _theme.default.fonts.bold
    },
    tintColor: _theme.default.colors.primary,
    backgroundColor: _theme.default.colors.dark
  }), _react.default.createElement(_styles.CardList, null, filteredList.length !== 0 ?
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[21][0]++, filteredList.map(function (item) {
    /* istanbul ignore next */
    cov_1ph5zvya7i().f[20]++;
    cov_1ph5zvya7i().s[112]++;
    return _react.default.createElement(_MainCard.MainCard, {
      key: item.id,
      completed: item.completed,
      text: item.text,
      onComplete: function onComplete() {
        /* istanbul ignore next */
        cov_1ph5zvya7i().f[21]++;
        cov_1ph5zvya7i().s[113]++;
        return handleComplete(item);
      },
      onDelete: function onDelete() {
        /* istanbul ignore next */
        cov_1ph5zvya7i().f[22]++;
        cov_1ph5zvya7i().s[114]++;
        return handleDelete(item);
      }
    });
  })) :
  /* istanbul ignore next */
  (cov_1ph5zvya7i().b[21][1]++, _react.default.createElement(_styles.EmptyText, null, "-NO TASKS-"))));
}

var _default =
/* istanbul ignore next */
(cov_1ph5zvya7i().s[115]++, Home);

/* istanbul ignore next */
cov_1ph5zvya7i().s[116]++;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,